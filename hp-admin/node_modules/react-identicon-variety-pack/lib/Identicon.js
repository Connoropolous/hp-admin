"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = Identicon;
exports.Blockie = Blockie;
exports.Bishop = Bishop;
exports.Discs = Discs;
exports.Rings = Rings;
exports.Network = Network;
exports.NetworkLarge = NetworkLarge;

var _react = _interopRequireWildcard(require("react"));

var _useRenderIcon = _interopRequireDefault(require("./useRenderIcon"));

var _blockies = _interopRequireDefault(require("./renderers/blockies"));

var _bishop = _interopRequireDefault(require("./renderers/bishop"));

var _discs = _interopRequireDefault(require("./renderers/discs"));

var _rings = _interopRequireDefault(require("./renderers/rings"));

var _network = _interopRequireDefault(require("./renderers/network"));

var _networkLarge = _interopRequireDefault(require("./renderers/network-large"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function Identicon(_ref) {
  var renderIcon = _ref.renderIcon,
      seed = _ref.seed,
      size = _ref.size,
      gridSize = _ref.gridSize,
      scale = _ref.scale,
      circle = _ref.circle,
      className = _ref.className;
  var canvasRef = (0, _react.useRef)(null);
  (0, _useRenderIcon.default)(renderIcon, {
    seed: seed,
    size: size,
    gridSize: gridSize,
    scale: scale
  }, canvasRef);
  var style = circle ? {
    borderRadius: '50%'
  } : {};
  return _react.default.createElement("canvas", {
    className: className,
    style: style,
    ref: canvasRef,
    width: 1,
    height: 1
  });
}

function Blockie(props) {
  return _react.default.createElement(Identicon, _extends({}, props, {
    renderIcon: _blockies.default
  }));
}

function Bishop(props) {
  return _react.default.createElement(Identicon, _extends({}, props, {
    renderIcon: _bishop.default
  }));
}

function Discs(props) {
  return _react.default.createElement(Identicon, _extends({}, props, {
    renderIcon: _discs.default
  }));
}

function Rings(props) {
  return _react.default.createElement(Identicon, _extends({}, props, {
    renderIcon: _rings.default
  }));
}

function Network(props) {
  return _react.default.createElement(Identicon, _extends({}, props, {
    renderIcon: _network.default
  }));
}

function NetworkLarge(props) {
  return _react.default.createElement(Identicon, _extends({}, props, {
    renderIcon: _networkLarge.default
  }));
}