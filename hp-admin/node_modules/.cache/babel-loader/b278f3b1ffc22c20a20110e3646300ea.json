{"ast":null,"code":"import { makeExecutableSchema } from 'graphql-tools';\nvar typeDefs = \"type Me {\\n  id: ID\\n  name: String\\n  avatarUrl: String\\n  isRegistered: Boolean\\n}\\n\\ntype HappStoreUser {\\n  hash: String\\n  name: String\\n}\\n\\ntype HhaUser {\\n  id: ID\\n  isRegistered: Boolean\\n}\\n\\ntype Happ {\\n  id: ID\\n  title: String\\n  description: String\\n  thumbnailUrl: String\\n  homepageUrl: String\\n  dnaHash: String\\n  ui: String\\n  happStoreId: String\\n  isEnabled: Boolean\\n}\\n\\ntype HostPricing {\\n  units: String\\n  pricePerUnit: String\\n}\\n\\ntype HolofuelUser {\\n  id: ID\\n  nickname: String\\n}\\n\\nenum TransactionType {\\n  offer\\n  request\\n}\\n\\nenum TransactionStatus {\\n  pending\\n  completed\\n  rejected\\n  declined\\n  cancelled\\n}\\n\\nenum TransactionDirection {\\n  incoming # indicates the recipient of funds\\n  outgoing # indicates the spender of funds\\n}\\n\\ntype Transaction {\\n  id: ID # ID will be the originCommitHash\\n  amount: Float\\n  counterparty: String\\n  direction: TransactionDirection\\n  status: TransactionStatus\\n  type: TransactionType\\n  timestamp: String\\n  fees: Float\\n  presentBalance: Float\\n  notes: String \\n}\\n\\ntype Ledger {\\n  balance: Float\\n  credit: Float\\n  payable: Float\\n  receivable: Float\\n  fees: Float\\n}\\n\\ntype Query {\\n  me: Me\\n  happStoreUser: HappStoreUser\\n  hostingUser: HhaUser\\n  happs: [Happ]\\n  happ(id: String!): Happ\\n  hostPricing: HostPricing\\n  holofuelCompletedTransactions: [Transaction]\\n  holofuelWaitingTransactions: [Transaction]\\n  holofuelActionableTransactions: [Transaction]\\n  holofuelLedger: Ledger\\n  holofuelUser(agentId: String): HolofuelUser\\n}\\n\\ntype Mutation {\\n  registerUser(name: String, avatarUrl: String): Me\\n  registerHostingUser: HhaUser\\n  enableHapp(appId: String): Happ\\n  disableHapp(appId: String): Happ\\n  updateHostPricing(units: String, pricePerUnit: String): HostPricing\\n  holofuelRequest(counterparty:String, amount:Float): Transaction\\n  holofuelOffer(counterparty:String, amount:Float, requestId:ID): Transaction\\n  holofuelAcceptOffer(transactionId: ID): Transaction # NOTE: holofuelAcceptOffer DOES NOT return the amount or counterparty. IF need these values, query from cache, as they will not change via this API.\\n  holofuelDecline(transactionId: ID): Transaction # \\\"\\\"\\n  holofuelCancel(transactionId: ID): Transaction # \\\"\\\"\\n}\\n\";\nimport resolvers from \"./resolvers\";\nconst schema = makeExecutableSchema({\n  typeDefs,\n  resolvers\n});\nexport default schema;","map":{"version":3,"sources":["/home/lisa/Documents/gitrepos/holochain/holo/happyTeam/hp-admin/hp-admin/src/graphql-server/index.js"],"names":["makeExecutableSchema","resolvers","schema","typeDefs"],"mappings":"AAAA,SAASA,oBAAT,QAAqC,eAArC;;AAEA,OAAOC,SAAP;AAEA,MAAMC,MAAM,GAAGF,oBAAoB,CAAC;AAClCG,EAAAA,QADkC;AAElCF,EAAAA;AAFkC,CAAD,CAAnC;AAKA,eAAeC,MAAf","sourcesContent":["import { makeExecutableSchema } from 'graphql-tools'\nimport typeDefs from './schema.graphql'\nimport resolvers from './resolvers'\n\nconst schema = makeExecutableSchema({\n  typeDefs,\n  resolvers\n})\n\nexport default schema\n"]},"metadata":{},"sourceType":"module"}