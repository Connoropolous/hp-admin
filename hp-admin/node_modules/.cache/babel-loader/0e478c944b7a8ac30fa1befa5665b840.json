{"ast":null,"code":"var _jsxFileName = \"/home/lisa/Documents/gitrepos/holochain/holo/happyTeam/hp-admin/hp-admin/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { useMediaPredicate } from 'react-media-hook';\nimport apolloClient from 'apolloClient';\nimport ReactModal from 'react-modal';\nimport PrimaryLayout from 'pages/PrimaryLayout';\nimport HFPrimaryLayout from 'pages/holofuel/PrimaryLayout';\nimport RegisterUser from 'components/RegisterUser';\nimport ScreenWidthContext from 'contexts/screenWidth';\nexport function App() {\n  if (process.env.REACT_APP_HOLOFUEL_APP) {\n    return React.createElement(HoloFuelApp, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    });\n  } else {\n    return React.createElement(HPAdminApp, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    });\n  }\n}\nexport function HoloFuelApp() {\n  const isWide = useMediaPredicate('(min-width: 550px)');\n  return React.createElement(ApolloProvider, {\n    client: apolloClient,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(ScreenWidthContext.Provider, {\n    value: isWide,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(HFPrimaryLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }))));\n}\nexport function HPAdminApp() {\n  const isWide = useMediaPredicate('(min-width: 550px)');\n  return React.createElement(ApolloProvider, {\n    client: apolloClient,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(RegisterUser, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(ScreenWidthContext.Provider, {\n    value: isWide,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(PrimaryLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })))));\n}\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47\n  },\n  __self: this\n}), document.getElementById('root'));\nReactModal.setAppElement('#root');","map":{"version":3,"sources":["/home/lisa/Documents/gitrepos/holochain/holo/happyTeam/hp-admin/hp-admin/src/index.js"],"names":["React","ReactDOM","ApolloProvider","BrowserRouter","Router","useMediaPredicate","apolloClient","ReactModal","PrimaryLayout","HFPrimaryLayout","RegisterUser","ScreenWidthContext","App","process","env","REACT_APP_HOLOFUEL_APP","HoloFuelApp","isWide","HPAdminApp","render","document","getElementById","setAppElement"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,aAAa,IAAIC,MAA1B,QAAwC,kBAAxC;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,aAAP,MAA0B,qBAA1B;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AAEA,OAAO,SAASC,GAAT,GAAgB;AACrB,MAAIC,OAAO,CAACC,GAAR,CAAYC,sBAAhB,EAAwC;AACtC,WAAO,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,MAEO;AACL,WAAO,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AACF;AAED,OAAO,SAASC,WAAT,GAAwB;AAC7B,QAAMC,MAAM,GAAGZ,iBAAiB,CAAC,oBAAD,CAAhC;AAEA,SAAO,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAEC,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACL,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAEW,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADK,CAAP;AAOD;AAED,OAAO,SAASC,UAAT,GAAuB;AAC5B,QAAMD,MAAM,GAAGZ,iBAAiB,CAAC,oBAAD,CAAhC;AAEA,SAAO,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAEC,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACL,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAEW,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CADK,CAAP;AASD;AAEDhB,QAAQ,CAACkB,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB;AACAd,UAAU,CAACe,aAAX,CAAyB,OAAzB","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ApolloProvider } from '@apollo/react-hooks'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { useMediaPredicate } from 'react-media-hook'\nimport apolloClient from 'apolloClient'\nimport ReactModal from 'react-modal'\nimport PrimaryLayout from 'pages/PrimaryLayout'\nimport HFPrimaryLayout from 'pages/holofuel/PrimaryLayout'\nimport RegisterUser from 'components/RegisterUser'\nimport ScreenWidthContext from 'contexts/screenWidth'\n\nexport function App () {\n  if (process.env.REACT_APP_HOLOFUEL_APP) {\n    return <HoloFuelApp />\n  } else {\n    return <HPAdminApp />\n  }\n}\n\nexport function HoloFuelApp () {\n  const isWide = useMediaPredicate('(min-width: 550px)')\n\n  return <ApolloProvider client={apolloClient}>\n    <Router>\n      <ScreenWidthContext.Provider value={isWide}>\n        <HFPrimaryLayout />\n      </ScreenWidthContext.Provider>\n    </Router>\n  </ApolloProvider>\n}\n\nexport function HPAdminApp () {\n  const isWide = useMediaPredicate('(min-width: 550px)')\n\n  return <ApolloProvider client={apolloClient}>\n    <Router>\n      <RegisterUser>\n        <ScreenWidthContext.Provider value={isWide}>\n          <PrimaryLayout />\n        </ScreenWidthContext.Provider>\n      </RegisterUser>\n    </Router>\n  </ApolloProvider>\n}\n\nReactDOM.render(<App />, document.getElementById('root'))\nReactModal.setAppElement('#root')\n"]},"metadata":{},"sourceType":"module"}