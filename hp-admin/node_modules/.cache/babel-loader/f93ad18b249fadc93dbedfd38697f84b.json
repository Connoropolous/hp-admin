{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = renderIcon;\n\nvar _utils = require(\"./utils\");\n\nfunction buildOpts(opts) {\n  var newOpts = {};\n  newOpts.seed = opts.seed || Math.floor(Math.random() * Math.pow(10, 16)).toString(16);\n  (0, _utils.seedrand)(newOpts.seed);\n\n  if (opts.size && opts.gridSize && opts.scale) {\n    throw new Error(\"Don't specify size, gridSize *and* scale. Choose two.\");\n  }\n\n  newOpts.gridSize = opts.gridSize || opts.size / opts.scale || 8;\n  newOpts.scale = opts.scale || opts.size / opts.gridSize || 4;\n  newOpts.size = opts.size || newOpts.gridSize * newOpts.scale;\n  return newOpts;\n}\n\nfunction renderIcon(opts, canvas) {\n  opts = buildOpts(opts || {});\n  var _opts = opts,\n      size = _opts.size;\n  canvas.width = canvas.height = size;\n  var cc = canvas.getContext('2d');\n  var gray = 100 * (0, _utils.rand)();\n  cc.fillStyle = (0, _utils.encodeColor)({\n    h: 0,\n    s: 0,\n    l: gray\n  });\n  cc.fillRect(0, 0, canvas.width, canvas.height);\n  var numDiscs = 3 + (0, _utils.rand)() * 10;\n  var centers = [];\n\n  for (var i = 0; i < numDiscs; i++) {\n    centers.push({\n      x: (0, _utils.rand)() * size,\n      y: (0, _utils.rand)() * size\n    });\n  }\n\n  cc.lineWidth = 0.5;\n\n  if (gray < 50) {\n    cc.strokeStyle = \"#FFFFFF\";\n  } else {\n    cc.strokeStyle = \"#000000\";\n  }\n\n  for (var _i = 0; _i < 4; _i++) {\n    for (var j = 0; j < 2; j++) {\n      var start = centers[Math.floor(centers.length * (0, _utils.rand)())];\n      var end = centers[Math.floor(centers.length * (0, _utils.rand)())];\n      cc.beginPath();\n      cc.moveTo(start.x, start.y);\n      cc.lineTo(end.x, end.y);\n      cc.stroke();\n    }\n  }\n\n  for (var _i2 = 0; _i2 < numDiscs; _i2++) {\n    var _centers$_i = centers[_i2],\n        x = _centers$_i.x,\n        y = _centers$_i.y;\n    cc.fillStyle = (0, _utils.encodeColor)((0, _utils.createColor)());\n    cc.beginPath();\n    var radius = 3 + (0, _utils.rand)() * size * 0.1;\n    cc.arc(x, y, radius, 0, 2 * Math.PI);\n    cc.fill();\n  }\n\n  return canvas;\n}","map":null,"metadata":{},"sourceType":"script"}