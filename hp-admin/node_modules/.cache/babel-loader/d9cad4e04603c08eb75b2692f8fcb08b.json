{"ast":null,"code":"import _slicedToArray from \"/home/lisa/Documents/gitrepos/holochain/holo/happyTeam/hp-admin/hp-admin/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/lisa/Documents/gitrepos/holochain/holo/happyTeam/hp-admin/hp-admin/src/pages/HappDetails/HappDetails.js\";\nimport React, { useState } from 'react';\nimport HappThumbnail from 'components/HappThumbnail';\nimport HostButton from 'components/HostButton';\nimport Button from 'components/Button';\nimport Modal from 'components/Modal';\nimport \"./HappDetails.module.css\";\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nvar HappQuery = { kind: \"Document\", definitions: [{ kind: \"OperationDefinition\", operation: \"query\", name: { kind: \"Name\", value: \"Happ\" }, variableDefinitions: [{ kind: \"VariableDefinition\", variable: { kind: \"Variable\", name: { kind: \"Name\", value: \"id\" } }, type: { kind: \"NonNullType\", type: { kind: \"NamedType\", name: { kind: \"Name\", value: \"String\" } } }, directives: [] }], directives: [], selectionSet: { kind: \"SelectionSet\", selections: [{ kind: \"Field\", name: { kind: \"Name\", value: \"happ\" }, arguments: [{ kind: \"Argument\", name: { kind: \"Name\", value: \"id\" }, value: { kind: \"Variable\", name: { kind: \"Name\", value: \"id\" } } }], directives: [], selectionSet: { kind: \"SelectionSet\", selections: [{ kind: \"Field\", name: { kind: \"Name\", value: \"id\" }, arguments: [], directives: [] }, { kind: \"Field\", name: { kind: \"Name\", value: \"title\" }, arguments: [], directives: [] }, { kind: \"Field\", name: { kind: \"Name\", value: \"description\" }, arguments: [], directives: [] }, { kind: \"Field\", name: { kind: \"Name\", value: \"thumbnailUrl\" }, arguments: [], directives: [] }, { kind: \"Field\", name: { kind: \"Name\", value: \"homepageUrl\" }, arguments: [], directives: [] }, { kind: \"Field\", name: { kind: \"Name\", value: \"dnaHash\" }, arguments: [], directives: [] }, { kind: \"Field\", name: { kind: \"Name\", value: \"ui\" }, arguments: [], directives: [] }, { kind: \"Field\", name: { kind: \"Name\", value: \"happStoreId\" }, arguments: [], directives: [] }, { kind: \"Field\", name: { kind: \"Name\", value: \"isEnabled\" }, arguments: [], directives: [] }] } }] } }], loc: { start: 0, end: 166, source: { body: \"query Happ($id: String!) {\\n  happ(id: $id) {\\n    id\\n    title\\n    description\\n    thumbnailUrl\\n    homepageUrl\\n    dnaHash\\n    ui\\n    happStoreId\\n    isEnabled\\n  }\\n}\\n\", name: \"GraphQL request\", locationOffset: { line: 1, column: 1 } } } };\nvar EnableHappMutation = { kind: \"Document\", definitions: [{ kind: \"OperationDefinition\", operation: \"mutation\", name: { kind: \"Name\", value: \"EnableHapp\" }, variableDefinitions: [{ kind: \"VariableDefinition\", variable: { kind: \"Variable\", name: { kind: \"Name\", value: \"appId\" } }, type: { kind: \"NamedType\", name: { kind: \"Name\", value: \"String\" } }, directives: [] }], directives: [], selectionSet: { kind: \"SelectionSet\", selections: [{ kind: \"Field\", name: { kind: \"Name\", value: \"enableHapp\" }, arguments: [{ kind: \"Argument\", name: { kind: \"Name\", value: \"appId\" }, value: { kind: \"Variable\", name: { kind: \"Name\", value: \"appId\" } } }], directives: [], selectionSet: { kind: \"SelectionSet\", selections: [{ kind: \"Field\", name: { kind: \"Name\", value: \"id\" }, arguments: [], directives: [] }, { kind: \"Field\", name: { kind: \"Name\", value: \"title\" }, arguments: [], directives: [] }, { kind: \"Field\", name: { kind: \"Name\", value: \"happStoreId\" }, arguments: [], directives: [] }, { kind: \"Field\", name: { kind: \"Name\", value: \"isEnabled\" }, arguments: [], directives: [] }] } }] } }], loc: { start: 0, end: 122, source: { body: \"mutation EnableHapp ($appId: String) {\\n  enableHapp(appId: $appId) {\\n    id\\n    title\\n    happStoreId\\n    isEnabled\\n  }\\n}\\n\", name: \"GraphQL request\", locationOffset: { line: 1, column: 1 } } } };\nvar DisableHappMutation = { kind: \"Document\", definitions: [{ kind: \"OperationDefinition\", operation: \"mutation\", name: { kind: \"Name\", value: \"DisableHapp\" }, variableDefinitions: [{ kind: \"VariableDefinition\", variable: { kind: \"Variable\", name: { kind: \"Name\", value: \"appId\" } }, type: { kind: \"NamedType\", name: { kind: \"Name\", value: \"String\" } }, directives: [] }], directives: [], selectionSet: { kind: \"SelectionSet\", selections: [{ kind: \"Field\", name: { kind: \"Name\", value: \"disableHapp\" }, arguments: [{ kind: \"Argument\", name: { kind: \"Name\", value: \"appId\" }, value: { kind: \"Variable\", name: { kind: \"Name\", value: \"appId\" } } }], directives: [], selectionSet: { kind: \"SelectionSet\", selections: [{ kind: \"Field\", name: { kind: \"Name\", value: \"id\" }, arguments: [], directives: [] }, { kind: \"Field\", name: { kind: \"Name\", value: \"title\" }, arguments: [], directives: [] }, { kind: \"Field\", name: { kind: \"Name\", value: \"happStoreId\" }, arguments: [], directives: [] }, { kind: \"Field\", name: { kind: \"Name\", value: \"isEnabled\" }, arguments: [], directives: [] }] } }] } }], loc: { start: 0, end: 124, source: { body: \"mutation DisableHapp ($appId: String) {\\n  disableHapp(appId: $appId) {\\n    id\\n    title\\n    happStoreId\\n    isEnabled\\n  }\\n}\\n\", name: \"GraphQL request\", locationOffset: { line: 1, column: 1 } } } };\nexport default function BrowseHapps({\n  history: {\n    push\n  },\n  match: {\n    params\n  }\n} = {}) {\n  const _useQuery = useQuery(HappQuery, {\n    variables: {\n      id: params.appId || ''\n    }\n  }),\n        _useQuery$data = _useQuery.data,\n        _useQuery$data2 = _useQuery$data === void 0 ? {} : _useQuery$data,\n        _useQuery$data2$happ = _useQuery$data2.happ,\n        happ = _useQuery$data2$happ === void 0 ? [] : _useQuery$data2$happ;\n\n  const _useMutation = useMutation(EnableHappMutation),\n        _useMutation2 = _slicedToArray(_useMutation, 1),\n        enableHappMutation = _useMutation2[0];\n\n  const _useMutation3 = useMutation(DisableHappMutation),\n        _useMutation4 = _slicedToArray(_useMutation3, 1),\n        disableHappMutation = _useMutation4[0];\n\n  const enableHapp = appId => enableHappMutation({\n    variables: {\n      appId\n    }\n  });\n\n  const disableHapp = appId => disableHappMutation({\n    variables: {\n      appId\n    }\n  });\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isModalOpen = _useState2[0],\n        setModalOpen = _useState2[1];\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        error = _useState4[0],\n        setError = _useState4[1];\n\n  if (!happ) {\n    return null;\n  }\n\n  const id = happ.id,\n        title = happ.title,\n        description = happ.description,\n        thumbnailUrl = happ.thumbnailUrl,\n        isEnabled = happ.isEnabled;\n  const errorSummary = error.summary,\n        errorDetails = error.details;\n\n  const handleEnableHapp = () => {\n    enableHapp(id).then(() => setModalOpen(true)).catch(errorDetails => setError({\n      summary: 'Couldn\\'t enable this hApp',\n      details: errorDetails\n    }));\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, errorSummary && React.createElement(\"div\", {\n    className: \"HappDetails-module__error___2lOcP\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, errorSummary, errorDetails && React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, errorDetails.message)), React.createElement(\"summary\", {\n    className: \"HappDetails-module__summary___hdFOS\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(HappThumbnail, {\n    url: thumbnailUrl,\n    title: title,\n    className: \"HappDetails-module__thumbnail___JvU9I\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"HappDetails-module__details___158Rx\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"HappDetails-module__title___2VJYH\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, title), React.createElement(HostButton, {\n    isEnabled: isEnabled,\n    enableHapp: handleEnableHapp,\n    disableHapp: () => disableHapp(id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }))), React.createElement(HappSection, {\n    title: \"About\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"HappDetails-module__description___aSi9b\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, description)), React.createElement(Modal, {\n    contentLabel: \"App Hosting Success\",\n    isOpen: isModalOpen,\n    handleClose: () => setModalOpen(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"HappDetails-module__modal-header___bC1Lf\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, title), \" is now being hosted!\")), React.createElement(\"footer\", {\n    className: \"HappDetails-module__modal-footer___byxxB\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"primary\",\n    wide: true,\n    onClick: () => push('/browse-happs'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Back to hApps\"), React.createElement(Button, {\n    wide: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Hosting Overview\"))));\n}\n\nconst HappSection = ({\n  title,\n  className,\n  children\n}) => React.createElement(\"section\", {\n  className: (className ? className + \" \" : \"\") + \"HappDetails-module__section___RByD1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 92\n  },\n  __self: this\n}, React.createElement(\"h2\", {\n  className: \"HappDetails-module__section-title___1nhHB\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 93\n  },\n  __self: this\n}, title), children);","map":{"version":3,"sources":["/home/lisa/Documents/gitrepos/holochain/holo/happyTeam/hp-admin/hp-admin/src/pages/HappDetails/HappDetails.js"],"names":["React","useState","HappThumbnail","HostButton","Button","Modal","useQuery","useMutation","BrowseHapps","history","push","match","params","HappQuery","variables","id","appId","data","happ","EnableHappMutation","enableHappMutation","DisableHappMutation","disableHappMutation","enableHapp","disableHapp","isModalOpen","setModalOpen","error","setError","title","description","thumbnailUrl","isEnabled","errorSummary","summary","errorDetails","details","handleEnableHapp","then","catch","message","HappSection","className","children"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport HappThumbnail from 'components/HappThumbnail'\nimport HostButton from 'components/HostButton'\nimport Button from 'components/Button'\nimport Modal from 'components/Modal'\nimport './HappDetails.module.css'\n\nimport { useQuery, useMutation } from '@apollo/react-hooks'\nimport HappQuery from 'graphql/HappQuery.gql'\nimport EnableHappMutation from 'graphql/EnableHappMutation.gql'\nimport DisableHappMutation from 'graphql/DisableHappMutation.gql'\n\nexport default function BrowseHapps ({\n  history: { push },\n  match: { params }\n} = {}) {\n  const { data: { happ = [] } = {} } = useQuery(HappQuery, {\n    variables: {\n      id: params.appId || ''\n    }\n  })\n  const [enableHappMutation] = useMutation(EnableHappMutation)\n  const [disableHappMutation] = useMutation(DisableHappMutation)\n  const enableHapp = appId => enableHappMutation({ variables: { appId } })\n  const disableHapp = appId => disableHappMutation({ variables: { appId } })\n  const [isModalOpen, setModalOpen] = useState(false)\n  const [error, setError] = useState({})\n\n  if (!happ) {\n    return null\n  }\n\n  const { id, title, description, thumbnailUrl, isEnabled } = happ\n  const { summary: errorSummary, details: errorDetails } = error\n\n  const handleEnableHapp = () => {\n    enableHapp(id)\n      .then(() => setModalOpen(true))\n      .catch(errorDetails => setError({\n        summary: 'Couldn\\'t enable this hApp',\n        details: errorDetails\n      }))\n  }\n\n  return <React.Fragment>\n    {errorSummary && <div styleName='error'>\n      {errorSummary}\n      {errorDetails && <code>{errorDetails.message}</code>}\n    </div>}\n\n    <summary styleName='summary'>\n      <HappThumbnail url={thumbnailUrl} title={title} styleName='thumbnail' />\n      <div styleName='details'>\n        <h1 styleName='title'>{title}</h1>\n        <HostButton\n          isEnabled={isEnabled}\n          enableHapp={handleEnableHapp}\n          disableHapp={() => disableHapp(id)} />\n      </div>\n    </summary>\n\n    <HappSection title='About'>\n      <div styleName='description'>{description}</div>\n    </HappSection>\n    <Modal\n      contentLabel='App Hosting Success'\n      isOpen={isModalOpen}\n      handleClose={() => setModalOpen(false)}\n    >\n      <header styleName='modal-header'>\n        <p>\n          <strong>{title}</strong> is now being hosted!\n        </p>\n      </header>\n      <footer styleName='modal-footer'>\n        <Button\n          variant='primary'\n          wide\n          onClick={() => push('/browse-happs')}\n        >\n          Back to hApps\n        </Button>\n\n        {/* TODO: Implement this action */}\n        <Button wide>Hosting Overview</Button>\n      </footer>\n    </Modal>\n  </React.Fragment>\n}\n\nconst HappSection = ({ title, className, children }) => (\n  <section styleName='section' className={className}>\n    <h2 styleName='section-title'>{title}</h2>\n    {children}\n  </section>\n)\n"]},"metadata":{},"sourceType":"module"}