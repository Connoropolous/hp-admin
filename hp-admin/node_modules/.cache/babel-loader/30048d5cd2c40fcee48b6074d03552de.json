{"ast":null,"code":"(function () {\n  'use strict';\n\n  var compoundSubject = function (arrayOfStrings) {\n    var wrapperObject = {},\n        endWith = 'and',\n        delimitAll = false,\n        delimitWith = ',';\n\n    wrapperObject.endWith = function (newEndWith) {\n      if (typeof newEndWith !== 'string') {\n        return wrapperObject;\n      }\n\n      endWith = newEndWith;\n      return wrapperObject;\n    };\n\n    wrapperObject.delimitAll = function ()\n    /*newDelimitAll*/\n    {\n      var newDelimitAll = arguments[0];\n\n      if (typeof newDelimitAll === 'boolean') {\n        delimitAll = newDelimitAll;\n      } else {\n        delimitAll = true;\n      }\n\n      return wrapperObject;\n    };\n\n    wrapperObject.delimitWith = function (newDelimitWith) {\n      if (typeof newDelimitWith !== 'string') {\n        return wrapperObject;\n      }\n\n      delimitWith = newDelimitWith;\n      return wrapperObject;\n    };\n\n    wrapperObject.make = function () {\n      var combinedEndWith = delimitAll ? delimitWith + ' ' + endWith + ' ' : ' ' + endWith + ' ',\n          upToLastTwo,\n          lastTwo;\n\n      if (typeof arrayOfStrings === 'undefined' || !arrayOfStrings instanceof Array) {\n        return '';\n      }\n\n      upToLastTwo = arrayOfStrings.slice(0, -2).join(delimitWith + ' ');\n      lastTwo = arrayOfStrings.slice(arrayOfStrings.length - 2).join(combinedEndWith);\n\n      if (!upToLastTwo.length) {\n        return lastTwo;\n      }\n\n      return upToLastTwo + delimitWith + ' ' + lastTwo;\n    };\n\n    return wrapperObject;\n  }; // Node\n\n\n  if (typeof module !== 'undefined') {\n    module.exports = compoundSubject;\n  } // Browser\n  else if (typeof window !== 'undefined') {\n      window.compoundSubject = compoundSubject;\n    } else {\n      throw new Error('Couldn\\'t find a suitable scope in which to define compoundSubject');\n    }\n})();","map":null,"metadata":{},"sourceType":"script"}