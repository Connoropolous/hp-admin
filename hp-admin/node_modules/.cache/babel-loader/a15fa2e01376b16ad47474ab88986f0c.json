{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction applySchemaTransforms(originalSchema, transforms) {\n  return transforms.reduce(function (schema, transform) {\n    return transform.transformSchema ? transform.transformSchema(schema) : schema;\n  }, originalSchema);\n}\n\nexports.applySchemaTransforms = applySchemaTransforms;\n\nfunction applyRequestTransforms(originalRequest, transforms) {\n  return transforms.reduce(function (request, transform) {\n    return transform.transformRequest ? transform.transformRequest(request) : request;\n  }, originalRequest);\n}\n\nexports.applyRequestTransforms = applyRequestTransforms;\n\nfunction applyResultTransforms(originalResult, transforms) {\n  return transforms.reduce(function (result, transform) {\n    return transform.transformResult ? transform.transformResult(result) : result;\n  }, originalResult);\n}\n\nexports.applyResultTransforms = applyResultTransforms;\n\nfunction composeTransforms() {\n  var transforms = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    transforms[_i] = arguments[_i];\n  }\n\n  var reverseTransforms = transforms.slice().reverse();\n  return {\n    transformSchema: function (originalSchema) {\n      return applySchemaTransforms(originalSchema, transforms);\n    },\n    transformRequest: function (originalRequest) {\n      return applyRequestTransforms(originalRequest, reverseTransforms);\n    },\n    transformResult: function (result) {\n      return applyResultTransforms(result, reverseTransforms);\n    }\n  };\n}\n\nexports.composeTransforms = composeTransforms;","map":null,"metadata":{},"sourceType":"script"}