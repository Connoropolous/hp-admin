{"ast":null,"code":"export const happs = [{\n  id: 'QmHHAHappEntryAddressHash1',\n  happstoreId: 'QmXxiimzfcSHYqHXV2z6WNopeiFnPBx9YKnHzPcq9o8VoT'\n}, {\n  id: 'QmHHAHappEntryAddressHash2',\n  happstoreId: 'QmXx7imYqHXV2z6WNopeiFnPBx9YKnHzPcq9o8VoTzfcSH'\n}];\nexport const hostingUserId = 'HcUserAgentId';\n\nfunction presentHappForGetAllApps({\n  id,\n  happstoreId\n}) {\n  const details = JSON.stringify({\n    Ok: {\n      app_bundle: {\n        happ_hash: happstoreId\n      }\n    }\n  });\n  return {\n    hash: id,\n    details\n  };\n}\n\nfunction presentHappForGetEnabledAppList({\n  id,\n  happstoreId\n}) {\n  return {\n    address: id,\n    entry: {\n      happ_hash: happstoreId\n    }\n  };\n}\n\nfunction presentHappForGetAppDetails({\n  happstoreId\n}) {\n  return {\n    app_bundle: {\n      happ_hash: happstoreId\n    }\n  };\n}\n\nconst hha = {\n  host: {\n    register_as_host: () => 'QmHHAHostRegistrationAddress',\n    is_registered_as_host: {\n      links: []\n    },\n    enable_app: appId => appId,\n    disable_app: appId => appId,\n    get_all_apps: happs.map(presentHappForGetAllApps),\n    get_enabled_app_list: [presentHappForGetEnabledAppList(happs[0])]\n  },\n  provider: {\n    get_app_details: ({\n      app_hash: appHash\n    }) => {\n      const happ = happs.find(h => h.id === appHash);\n      return presentHappForGetAppDetails(happ);\n    },\n    get_service_log_details: {\n      price_per_unit: '5'\n    },\n    add_service_log_details: details => details\n  },\n  whoami: {\n    get_user: {\n      hash: hostingUserId\n    }\n  }\n};\nexport default hha;","map":{"version":3,"sources":["/home/lisa/Documents/gitrepos/holochain/holo/happyTeam/hp-admin/hp-admin/src/mock-dnas/hha.js"],"names":["happs","id","happstoreId","hostingUserId","presentHappForGetAllApps","details","JSON","stringify","Ok","app_bundle","happ_hash","hash","presentHappForGetEnabledAppList","address","entry","presentHappForGetAppDetails","hha","host","register_as_host","is_registered_as_host","links","enable_app","appId","disable_app","get_all_apps","map","get_enabled_app_list","provider","get_app_details","app_hash","appHash","happ","find","h","get_service_log_details","price_per_unit","add_service_log_details","whoami","get_user"],"mappings":"AAAA,OAAO,MAAMA,KAAK,GAAG,CACnB;AACEC,EAAAA,EAAE,EAAE,4BADN;AAEEC,EAAAA,WAAW,EAAE;AAFf,CADmB,EAKnB;AACED,EAAAA,EAAE,EAAE,4BADN;AAEEC,EAAAA,WAAW,EAAE;AAFf,CALmB,CAAd;AAWP,OAAO,MAAMC,aAAa,GAAG,eAAtB;;AAEP,SAASC,wBAAT,CAAmC;AAAEH,EAAAA,EAAF;AAAMC,EAAAA;AAAN,CAAnC,EAAwD;AACtD,QAAMG,OAAO,GAAGC,IAAI,CAACC,SAAL,CAAe;AAC7BC,IAAAA,EAAE,EAAE;AACFC,MAAAA,UAAU,EAAE;AACVC,QAAAA,SAAS,EAAER;AADD;AADV;AADyB,GAAf,CAAhB;AAOA,SAAO;AACLS,IAAAA,IAAI,EAAEV,EADD;AAELI,IAAAA;AAFK,GAAP;AAID;;AAED,SAASO,+BAAT,CAA0C;AAAEX,EAAAA,EAAF;AAAMC,EAAAA;AAAN,CAA1C,EAA+D;AAC7D,SAAO;AACLW,IAAAA,OAAO,EAAEZ,EADJ;AAELa,IAAAA,KAAK,EAAE;AACLJ,MAAAA,SAAS,EAAER;AADN;AAFF,GAAP;AAMD;;AAED,SAASa,2BAAT,CAAsC;AAAEb,EAAAA;AAAF,CAAtC,EAAuD;AACrD,SAAO;AACLO,IAAAA,UAAU,EAAE;AACVC,MAAAA,SAAS,EAAER;AADD;AADP,GAAP;AAKD;;AAED,MAAMc,GAAG,GAAG;AACVC,EAAAA,IAAI,EAAE;AACJC,IAAAA,gBAAgB,EAAE,MAAM,8BADpB;AAEJC,IAAAA,qBAAqB,EAAE;AACrBC,MAAAA,KAAK,EAAE;AADc,KAFnB;AAKJC,IAAAA,UAAU,EAAEC,KAAK,IAAIA,KALjB;AAMJC,IAAAA,WAAW,EAAED,KAAK,IAAIA,KANlB;AAOJE,IAAAA,YAAY,EAAExB,KAAK,CAACyB,GAAN,CAAUrB,wBAAV,CAPV;AAQJsB,IAAAA,oBAAoB,EAAE,CACpBd,+BAA+B,CAACZ,KAAK,CAAC,CAAD,CAAN,CADX;AARlB,GADI;AAaV2B,EAAAA,QAAQ,EAAE;AACRC,IAAAA,eAAe,EAAE,CAAC;AAAEC,MAAAA,QAAQ,EAAEC;AAAZ,KAAD,KAA2B;AAC1C,YAAMC,IAAI,GAAG/B,KAAK,CAACgC,IAAN,CAAWC,CAAC,IAAIA,CAAC,CAAChC,EAAF,KAAS6B,OAAzB,CAAb;AACA,aAAOf,2BAA2B,CAACgB,IAAD,CAAlC;AACD,KAJO;AAKRG,IAAAA,uBAAuB,EAAE;AACvBC,MAAAA,cAAc,EAAE;AADO,KALjB;AAQRC,IAAAA,uBAAuB,EAAE/B,OAAO,IAAIA;AAR5B,GAbA;AAuBVgC,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE;AACR3B,MAAAA,IAAI,EAAER;AADE;AADJ;AAvBE,CAAZ;AA8BA,eAAea,GAAf","sourcesContent":["export const happs = [\n  {\n    id: 'QmHHAHappEntryAddressHash1',\n    happstoreId: 'QmXxiimzfcSHYqHXV2z6WNopeiFnPBx9YKnHzPcq9o8VoT'\n  },\n  {\n    id: 'QmHHAHappEntryAddressHash2',\n    happstoreId: 'QmXx7imYqHXV2z6WNopeiFnPBx9YKnHzPcq9o8VoTzfcSH'\n  }\n]\n\nexport const hostingUserId = 'HcUserAgentId'\n\nfunction presentHappForGetAllApps ({ id, happstoreId }) {\n  const details = JSON.stringify({\n    Ok: {\n      app_bundle: {\n        happ_hash: happstoreId\n      }\n    }\n  })\n  return {\n    hash: id,\n    details\n  }\n}\n\nfunction presentHappForGetEnabledAppList ({ id, happstoreId }) {\n  return {\n    address: id,\n    entry: {\n      happ_hash: happstoreId\n    }\n  }\n}\n\nfunction presentHappForGetAppDetails ({ happstoreId }) {\n  return {\n    app_bundle: {\n      happ_hash: happstoreId\n    }\n  }\n}\n\nconst hha = {\n  host: {\n    register_as_host: () => 'QmHHAHostRegistrationAddress',\n    is_registered_as_host: {\n      links: []\n    },\n    enable_app: appId => appId,\n    disable_app: appId => appId,\n    get_all_apps: happs.map(presentHappForGetAllApps),\n    get_enabled_app_list: [\n      presentHappForGetEnabledAppList(happs[0])\n    ]\n  },\n  provider: {\n    get_app_details: ({ app_hash: appHash }) => {\n      const happ = happs.find(h => h.id === appHash)\n      return presentHappForGetAppDetails(happ)\n    },\n    get_service_log_details: {\n      price_per_unit: '5'\n    },\n    add_service_log_details: details => details\n  },\n  whoami: {\n    get_user: {\n      hash: hostingUserId\n    }\n  }\n}\n\nexport default hha\n"]},"metadata":{},"sourceType":"module"}