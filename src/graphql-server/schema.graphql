type Me {
  id: ID
  name: String
  avatarUrl: String
  isRegistered: Boolean
}

type HappStoreUser {
  hash: String
  name: String
}

type HhaUser {
  id: ID
}

type SourceCodeObject {
  codeHandle: String
  codeHash: String
  codeLink: String
}

type Happ {
  id: ID
  title: String
  thumbnailUrl: String
  homepageUrl: String
  dnaHash: String
  ui: String
  happStoreAddress: String
  isEnabled: Boolean
}

type FullDetailHapp {
  id: ID
  title: String
  thumbnailUrl: String
  homepageUrl: String
  ui: SourceCodeObject
  dna: [SourceCodeObject]
  happStoreAddress: String
  isEnabled: Boolean
}

type Query {
  me: Me
  happStoreUser: HappStoreUser
  hostingUser: HhaUser
  allHapps: [Happ]
  allAvailableHapps: [Happ]
  allHostedHapps: [Happ]
}

type Mutation {
  registerUser(name: String, avatarUrl: String): Me
  registerHostingUser(hostDoc: String): HhaUser
  enableHapp(appId: String): Happ
  disableHapp(appId: String): Happ
}
