type Me {
  id: ID
  name: String
  avatarUrl: String
  isRegistered: Boolean
}

type HappStoreUser {
  hash: String
  name: String
}

type HhaUser {
  id: ID
  isRegistered: Boolean
}

type Happ {
  id: ID
  title: String
  description: String
  thumbnailUrl: String
  homepageUrl: String
  dnaHash: String
  ui: String
  happStoreId: String
  isEnabled: Boolean
}

type HostPricing {
  units: String
  pricePerUnit: String
}

type Query {
  me: Me
  happStoreUser: HappStoreUser
  hostingUser: HhaUser
  happs: [Happ]
  happByStoreId(storeId: String!): Happ
  hostPricing: HostPricing
}

type Mutation {
  registerUser(name: String, avatarUrl: String): Me
  registerHostingUser: HhaUser
  enableHapp(appId: String): Happ
  disableHapp(appId: String): Happ
  updateHostPricing(units: String, pricePerUnit: String): HostPricing
}
